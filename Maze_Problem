def trier(a,b):
    global maze
    global path
    path.append([a,b])
    row = np.shape(maze)[0] -1
    col = np.shape(maze)[1] -1
    if a == row and b == col and path.count([a,b]) <=3:
        #print(a,b)
        path.append([a,b])
        return a,b
    elif a < row and b < col: 
        if a >= 0 and maze[a+1,b] != 1 and path.count([a+1,b]) <=:
            #print('down')
            #print(a,b)
            return trier(a+1,b)
        elif b >= 0 and maze[a,b+1] != 1 and path.count([a,b+1]) <=3:
            #print('right')
            #print(a,b)
            return trier(a,b+1)
        elif a > 0 and  maze[a-1,b] != 1 and path.count([a-1,b]) <=3:
            #print('up')
            #print(a,b)
            return trier(a-1,b)
        elif b > 0 and maze[a,b-1] != 1 and path.count([a,b-1]) <=3:
            #print('left')
            #print(a,b)
            return trier(a,b-1)
    elif a == row and b < col:
        if b >= 0 and maze[a,b+1] != 1 and path.count([a,b+1]) <=3:
            #print('right')
            #print(a,b)
            return trier(a,b+1)
        elif a > 0 and  maze[a-1,b] != 1 and path.count([a-1,b]) <=3:
            #print('up')
            #print(a,b)
            return trier(a-1,b)
        elif b > 0 and maze[a,b-1] != 1 and path.count([a,b-1]) <=3:
            #print('left')
            #print(a,b)
            return trier(a,b-1)
    elif a < row and b == col:
        if a >= 0 and maze[a+1,b] != 1 and path.count([a+1,b]) <=3:
            #print('down')
            #print(a,b)
            return trier(a+1,b)
        elif a > 0 and  maze[a-1,b] != 1 and path.count([a-1,b]) <=3:
            #print('up')
            #print(a,b)
            return trier(a-1,b)
        elif b > 0 and maze[a,b-1] != 1 and path.count([a,b-1]) <=3:
            #print('left')
            #print(a,b)
            return trier(a,b-1)
maze = np.zeros((6,6))
path = []
maze[1,0] = 1
maze[2,0] = 1
maze[0,2] = 1
maze[1,4] = 1
maze[2,2] = 1
maze[2,3] = 1
maze[3,3] = 1
maze[4,3] = 1
maze[3,5] = 1
#maze[5,3] = 1
print(maze)
trier(0,0)
print(path)
